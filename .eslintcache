[{"/Users/admin/Desktop/own-projects/my-cloud-storage/src/index.js":"1","/Users/admin/Desktop/own-projects/my-cloud-storage/src/App.js":"2","/Users/admin/Desktop/own-projects/my-cloud-storage/src/reportWebVitals.js":"3","/Users/admin/Desktop/own-projects/my-cloud-storage/src/useRoutes.js":"4","/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/Home.js":"5","/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/Storage.js":"6","/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/SignUp.js":"7","/Users/admin/Desktop/own-projects/my-cloud-storage/src/components/NavBar/index.js":"8","/Users/admin/Desktop/own-projects/my-cloud-storage/src/components/Footer/index.js":"9","/Users/admin/Desktop/own-projects/my-cloud-storage/src/aws-exports.js":"10","/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/Welcome.js":"11","/Users/admin/Desktop/own-projects/my-cloud-storage/src/hooks/message.hook.js":"12","/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/LogIn.js":"13"},{"size":606,"mtime":1607814320465,"results":"14","hashOfConfig":"15"},{"size":458,"mtime":1607691040429,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607465771191,"results":"17","hashOfConfig":"15"},{"size":647,"mtime":1608052333318,"results":"18","hashOfConfig":"15"},{"size":416,"mtime":1607722678108,"results":"19","hashOfConfig":"15"},{"size":403,"mtime":1607722669549,"results":"20","hashOfConfig":"15"},{"size":7681,"mtime":1608052046753,"results":"21","hashOfConfig":"15"},{"size":1229,"mtime":1608052240027,"results":"22","hashOfConfig":"15"},{"size":1336,"mtime":1607731793324,"results":"23","hashOfConfig":"15"},{"size":466,"mtime":1607963152160,"results":"24","hashOfConfig":"15"},{"size":672,"mtime":1608037942602,"results":"25","hashOfConfig":"15"},{"size":204,"mtime":1608035473602,"results":"26","hashOfConfig":"15"},{"size":4768,"mtime":1608053689147,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15uk8rm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/admin/Desktop/own-projects/my-cloud-storage/src/index.js",[],["56","57"],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/App.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/reportWebVitals.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/useRoutes.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/Home.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/Storage.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/SignUp.js",["58","59"],"import React, { useState, useEffect } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { object, string } from \"yup\";\n\nimport { useMessage } from \"../hooks/message.hook\";\n\nconst SignUp = () => {\n  const message = useMessage();\n  const history = useHistory();\n  const mainTitle = {\n    marginTop: \"40px\",\n    marginBottom: \"40px\",\n  };\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  const [cognitoError, setCognitoError] = useState({ error: \"\" });\n\n  useEffect(() => {\n    message(cognitoError.error);\n    setCognitoError({ error: \"\" });\n  }, [cognitoError.error, message]);\n\n  const validationSchema = object().shape({\n    username: string()\n      .min(2, \"Name must be at least 2 characters\")\n      .max(30, \"Name should not exceed 30 characters.\")\n      .required(\"Please, provide your name.\")\n      .matches(/^(.*)?\\S+(.*)?$/, \"Field cannot be empty.\"),\n    email: string()\n      .email(\"Email must be a valid email\")\n      .required(\"Please, provide your email.\")\n      .matches(/^(.*)?\\S+(.*)?$/, \"Cannot be empty.\"),\n    password: string()\n      .min(8, \"Password should be at least 8 characters.\")\n      .max(30, \"Password should not exceed 30 characters.\")\n      .required(\"Please, provide your password.\")\n      .matches(/^(?=.*[a-z])/, \"At least one a lowercase letter is required\")\n      .matches(/^(?=.*[A-Z])/, \"At least one a uppercase letter is required\")\n      .matches(/^(?=.*[0-9])/, \"At least one a number is required\")\n      .matches(\n        /^(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])/,\n        \"At least one a special character is required\"\n      )\n      .matches(/^(.*)?\\S+(.*)?$/, \"Cannot be empty.\"),\n    confirmPassword: Yup.string().when(\"password\", {\n      is: (val) => (val && val.length > 0 ? true : false),\n      then: Yup.string().oneOf(\n        [Yup.ref(\"password\")],\n        \"Both password should to be the same\"\n      ),\n    }),\n  });\n\n  const onSubmit = async (values, { resetForm }) => {\n    console.log(\"handleSubmit\", values);\n    const { username, email, password } = values;\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email,\n        },\n      });\n      resetForm({});\n      message(`User ${signUpResponse.user.username} was created successful`);\n      history.push(\"/welcome\");\n      console.log(signUpResponse);\n    } catch (error) {\n      console.log(error);\n      setCognitoError({\n        ...error,\n        error: error.message,\n      });\n    }\n  };\n\n  return (\n    <div className=\"row container\">\n      <h4\n        style={mainTitle}\n        className=\"col s6 offset-s3 blue-grey-text text-darken-3\"\n      >\n        Sign up\n      </h4>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          handleSubmit,\n          errors,\n          handleChange,\n          handleBlur,\n          touched,\n          isValid,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"col s12\">\n            <div className=\"row\">\n              <div className=\"input-field col s6 offset-s3\">\n                <i className=\"material-icons  prefix\">account_circle</i>\n                <input\n                  onChange={handleChange(\"username\")}\n                  id=\"username\"\n                  type=\"text\"\n                  className=\"validate\"\n                  value={values.username}\n                  onBlur={handleBlur(\"username\")}\n                />\n                <label htmlFor=\"username\">User Name</label>\n                <div style={{ height: \"5px\", paddingLeft: \"42px\" }}>\n                  {errors.username && touched.username && (\n                    <div\n                      style={{ fontSize: \"12px\" }}\n                      className=\"pink-text text-accent-3\"\n                    >\n                      {errors.username}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s6 offset-s3\">\n                <i className=\"material-icons  prefix\">email</i>\n                <input\n                  onChange={handleChange(\"email\")}\n                  id=\"email\"\n                  type=\"email\"\n                  className=\"validate\"\n                  value={values.email}\n                  onBlur={handleBlur(\"email\")}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <div style={{ height: \"5px\", paddingLeft: \"42px\" }}>\n                  {errors.email && touched.email && (\n                    <div\n                      style={{ fontSize: \"12px\" }}\n                      className=\"pink-text text-accent-3\"\n                    >\n                      {errors.email}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s6 offset-s3\">\n                <i className=\"material-icons prefix\">password</i>\n                <input\n                  onChange={handleChange(\"password\")}\n                  id=\"password\"\n                  type=\"password\"\n                  className=\"validate teal-input\"\n                  value={values.password}\n                  onBlur={handleBlur(\"password\")}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <div style={{ height: \"5px\", paddingLeft: \"42px\" }}>\n                  {errors.password && touched.password && (\n                    <div\n                      style={{ fontSize: \"12px\" }}\n                      className=\"pink-text text-accent-3\"\n                    >\n                      {errors.password}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s6 offset-s3\">\n                <i className=\"material-icons prefix\">password</i>\n                <input\n                  onChange={handleChange(\"confirmPassword\")}\n                  id=\"confirmpassword\"\n                  type=\"password\"\n                  className=\"validate\"\n                  value={values.confirmPassword}\n                  onBlur={handleBlur(\"confirmPassword\")}\n                />\n                <label htmlFor=\"confirmpassword\">Confirm password</label>\n                <div style={{ height: \"5px\", paddingLeft: \"42px\" }}>\n                  {errors.confirmPassword && touched.confirmPassword && (\n                    <div\n                      style={{ fontSize: \"12px\" }}\n                      className=\"pink-text text-accent-3\"\n                    >\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col s6 offset-s3\">\n              <NavLink\n                to=\"/forgotpassword\"\n                className=\"waves-effect waves-light btn-small blue-grey darken-2\"\n              >\n                Forgot password?\n              </NavLink>\n              <button\n                type=\"submit\"\n                className={`waves-effect waves-light btn-small right ${\n                  !isValid && \"disabled\"\n                }`}\n              >\n                Sign up\n              </button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUp;\n","/Users/admin/Desktop/own-projects/my-cloud-storage/src/components/NavBar/index.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/components/Footer/index.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/aws-exports.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/Welcome.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/hooks/message.hook.js",[],"/Users/admin/Desktop/own-projects/my-cloud-storage/src/pages/LogIn.js",["60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":48,"column":32,"nodeType":"67","messageId":"68","endLine":48,"endColumn":33,"suggestions":"69"},{"ruleId":"65","severity":1,"message":"70","line":48,"column":49,"nodeType":"67","messageId":"68","endLine":48,"endColumn":50,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":5,"column":13,"nodeType":"74","messageId":"75","endLine":5,"endColumn":16},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["78","79"],"Unnecessary escape character: \\/.",["80","81"],"no-unused-vars","'Yup' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"82","fix":"83","desc":"84"},{"messageId":"85","fix":"86","desc":"87"},{"messageId":"82","fix":"88","desc":"84"},{"messageId":"85","fix":"89","desc":"87"},"removeEscape",{"range":"90","text":"91"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"92","text":"93"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"94","text":"91"},{"range":"95","text":"93"},[1673,1674],"",[1673,1673],"\\",[1690,1691],[1690,1690]]